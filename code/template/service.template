// Create by code generator  {{.CreateTime}}
package service

import (
	"lazyer/library/generator/gsql"
	"{{.DaoPackagePath}}"
	"{{.ModelPackagePath}}"
	"{{.ParamPackagePath}}"
)


func QueryByPrimaryKey({{range $i,$field := .PrimaryKeyFields}} {{if ne $i 0}},{{end}}{{ .ColumnNameLowerCamel }} interface{}  {{end}}) (*model.{{.TableNameUpperCamel}}Model, error) {
	{{.TableNameLowerCamel}}, err := dao.QueryByPrimaryKey({{range $i,$field := .PrimaryKeyFields}} {{if ne $i 0}},{{end}}{{ .ColumnNameLowerCamel }}   {{end}})
	if err != nil {
		return nil,err
	}
	return {{.TableNameLowerCamel}},nil
}


func QueryByParam({{.TableNameLowerCamel}}Param *param.{{.TableNameUpperCamel}}Param) ([]model.{{.TableNameUpperCamel}}Model, error) {
	query := gsql.NewBoolQuery()
	gen := gsql.NewGenerator().PageNum({{.TableNameLowerCamel}}Param.PageNum).PageStart({{.TableNameLowerCamel}}Param.PageStart).PageSize({{.TableNameLowerCamel}}Param.PageSize).From(model.TABLE_NAME).Where(query)
	{{.TableNameLowerCamel}}s, err := dao.QueryByGsql(gen)
	if err != nil {
		return nil,err
	}
	return {{.TableNameLowerCamel}}s,nil
}
